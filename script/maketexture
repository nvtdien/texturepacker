#!/usr/bin/env python
# encoding: utf-8
"""
maketexture.py

Created by Damian Cugley on 2011-02-03.
Copyright (c) 2011 Alleged Literature. All rights reserved.
"""

import sys
import os
import getopt

import json
from alleged.minecraft.texture import Mixer

VERSION = '0.0 2011-02-03'


help_message = '''
The help message goes here.
'''


class Usage(Exception):
    def __init__(self, msg):
        self.msg = msg


def main(argv=None):
    if argv is None:
        argv = sys.argv
    try:
        try:
            opts, args = getopt.getopt(argv[1:], "ho:vV", ["help", "output=", 'version'])
        except getopt.error, msg:
            raise Usage(msg)

        mixer = Mixer()
        verbose = 0
        out_file = None

        # option processing
        for opt, arg in opts:
            if opt == "-v":
                verbose += 1
            elif opt in ("-h", "--help"):
                print >>sys.stderr, help_message
                return 0
            elif opt in ("-V", "--version"):
                print >>sys.stderr, VERSION
                return 0
            elif opt in ("-o", "--output"):
                out_file = arg
            else:
                raise Usage('Unexpected option {0!r}'.format(opt))

        for arg in args:
            with open(arg, 'rb') as strm:
                recipe = json.load(strm)
            base = 'file://' + os.path.abspath(arg)
            pack = mixer.make(recipe, base=base)
            if out_file == '-':
                pack.write_to(sys.stdout)
            else:
                if not out_file:
                    out_file = os.path.splitext(arg)[0] + '.zip'
                pack.write_to(out_file)
                if verbose:
                    print >>sys.stderr, 'Wrote ZIP to', out_file
            out_file = None

    except Usage, err:
        print >> sys.stderr, sys.argv[0].split("/")[-1] + ": " + str(err.msg)
        print >> sys.stderr, "\t for help use --help"
        return 2


if __name__ == "__main__":
    sys.exit(main())
